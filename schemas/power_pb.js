/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.exportSymbol('proto.is.common.PowerInfo', null, global);
goog.exportSymbol('proto.is.common.PowerInfo.BatteryStatus', null, global);
goog.exportSymbol('proto.is.common.PowerInfo.BatteryType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.is.common.PowerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.is.common.PowerInfo.repeatedFields_, null);
};
goog.inherits(proto.is.common.PowerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.is.common.PowerInfo.displayName = 'proto.is.common.PowerInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.is.common.PowerInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.is.common.PowerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.is.common.PowerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.is.common.PowerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.is.common.PowerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    voltage: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    terminalVoltage: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    cellVoltageList: jspb.Message.getRepeatedFloatingPointField(msg, 3),
    charge: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    capacity: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    status: jspb.Message.getFieldWithDefault(msg, 7, 0),
    uptime: (f = msg.getUptime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    autonomy: (f = msg.getAutonomy()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.is.common.PowerInfo}
 */
proto.is.common.PowerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.is.common.PowerInfo;
  return proto.is.common.PowerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.is.common.PowerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.is.common.PowerInfo}
 */
proto.is.common.PowerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVoltage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTerminalVoltage(value);
      break;
    case 3:
      var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
      msg.setCellVoltageList(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCharge(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCapacity(value);
      break;
    case 6:
      var value = /** @type {!proto.is.common.PowerInfo.BatteryType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {!proto.is.common.PowerInfo.BatteryStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 8:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setUptime(value);
      break;
    case 9:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setAutonomy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.is.common.PowerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.is.common.PowerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.is.common.PowerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.is.common.PowerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoltage();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getTerminalVoltage();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getCellVoltageList();
  if (f.length > 0) {
    writer.writePackedFloat(
      3,
      f
    );
  }
  f = message.getCharge();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getCapacity();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getUptime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getAutonomy();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.is.common.PowerInfo.BatteryType = {
  PB: 0,
  NICD: 1,
  NIMH: 2,
  LIPO: 3
};

/**
 * @enum {number}
 */
proto.is.common.PowerInfo.BatteryStatus = {
  UNKNOWN: 0,
  CHARGING: 1,
  DISCHARGING: 2,
  CHARGED: 3,
  NOT_CONNECTED: 4
};

/**
 * optional float voltage = 1;
 * @return {number}
 */
proto.is.common.PowerInfo.prototype.getVoltage = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.is.common.PowerInfo.prototype.setVoltage = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float terminal_voltage = 2;
 * @return {number}
 */
proto.is.common.PowerInfo.prototype.getTerminalVoltage = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.is.common.PowerInfo.prototype.setTerminalVoltage = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * repeated float cell_voltage = 3;
 * @return {!Array.<number>}
 */
proto.is.common.PowerInfo.prototype.getCellVoltageList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/** @param {!Array.<number>} value */
proto.is.common.PowerInfo.prototype.setCellVoltageList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.is.common.PowerInfo.prototype.addCellVoltage = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.is.common.PowerInfo.prototype.clearCellVoltageList = function() {
  this.setCellVoltageList([]);
};


/**
 * optional float charge = 4;
 * @return {number}
 */
proto.is.common.PowerInfo.prototype.getCharge = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.is.common.PowerInfo.prototype.setCharge = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float capacity = 5;
 * @return {number}
 */
proto.is.common.PowerInfo.prototype.getCapacity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.is.common.PowerInfo.prototype.setCapacity = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional BatteryType type = 6;
 * @return {!proto.is.common.PowerInfo.BatteryType}
 */
proto.is.common.PowerInfo.prototype.getType = function() {
  return /** @type {!proto.is.common.PowerInfo.BatteryType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.is.common.PowerInfo.BatteryType} value */
proto.is.common.PowerInfo.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional BatteryStatus status = 7;
 * @return {!proto.is.common.PowerInfo.BatteryStatus}
 */
proto.is.common.PowerInfo.prototype.getStatus = function() {
  return /** @type {!proto.is.common.PowerInfo.BatteryStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.is.common.PowerInfo.BatteryStatus} value */
proto.is.common.PowerInfo.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional google.protobuf.Duration uptime = 8;
 * @return {?proto.google.protobuf.Duration}
 */
proto.is.common.PowerInfo.prototype.getUptime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 8));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.is.common.PowerInfo.prototype.setUptime = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.is.common.PowerInfo.prototype.clearUptime = function() {
  this.setUptime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.is.common.PowerInfo.prototype.hasUptime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Duration autonomy = 9;
 * @return {?proto.google.protobuf.Duration}
 */
proto.is.common.PowerInfo.prototype.getAutonomy = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 9));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.is.common.PowerInfo.prototype.setAutonomy = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.is.common.PowerInfo.prototype.clearAutonomy = function() {
  this.setAutonomy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.is.common.PowerInfo.prototype.hasAutonomy = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.is.common);
